#!/usr/bin/env sh
# (C) Martin V\"ath <martin@mvath.de>"

Echo() {
	printf '%s\n' "${*}"
}

Echon() {
	printf '%s' "${*}"
}

Fatal() {
	Echo "${0##*/}: ${*}" >&2
	exit 1
}

Usage() {
	Echo "Usage: ${0##*/} [options] SIZE [DIR]
Prepare a zram device and use it as swap (resp. mount it under DIR).
SIZE is the size in megabytes.
The following options are available:
-c OWNER chown DIR to OWNER
-d DEV   Use zram device DEV (default: DEV=0)
-m MODE  chmod DIR to MODE
-o OPTS  Use these mount options for DIR.
-p PRIO  Use priority PRIO for the swap device (default is 16383).
         Use PRIO=- if you do not want to set it.
-t TYPE  Use a filesystem of type TYPE if DIR is specified.
         TYPE can be either ext2 or ext4.
-k       Do no attempt to remove a previously used zram."
	exit ${1:-1}
}

dev=0
prio=16383
fstype=ext4
keep=false
opts=
mode=
owgr=
while getopts 'c:d:m:o:p:t:khH?' opt
do	case ${opt} in
	c)	owgr=${OPTARG};;
	d)	dev=${OPTARG};;
	m)	mode=${OPTARG};;
	o)	opts=${OPTARG};;
	p)	prio=${OPTARG};;
	t)	fstype=${OPTARG};;
	k)	keep=:;;
	*)	Usage 0;;
	esac
done
shift $(( ${OPTIND} -1 ))

[ ${#} -eq 1 ] || [ ${#} -eq 2 ] || Usage
[ "${1}" -ge 0 ] || Usage
size=$(( ${1} * 1024 * 1024 )) && [ "${size}" -ge 0 ] || Usage
[ ${#} -eq 2 ] && case ${2} in
/*)
	:;;
*)
	Usage;;
esac

devnode="/dev/zram${dev}"
if ! test -e "${devnode}"
then	modprobe zram >/dev/null 2>&1
	test -e "${devnode}" || Fatal "cannot find ${devnode}"
fi
block="/sys/block/zram${dev}"
test -d "${block}" || Fatal "cannot find ${block}"

if ! ${keep}
then	swapoff -- "${devnode}" >/dev/null 2>&1
	umount -- "${devnode}" >/dev/null 2>&1
	Echon 1 >"${block}/reset"
fi

Echon "${size}" >"${block}/disksize" || Fatal "cannot set zram${dev} size"

if [ ${#} -eq 1 ]
then	mkswap "${devnode}" >/dev/null || Fatal "mkswap ${devnode} failed"
	if [ "${prio}" = '-' ]
	then	swapon -- "${devnode}"
	else	swapon -p "${prio}" -- "${devnode}"
	fi || Fatal "swapon failed"
	exit 0
fi
fsopts='-O^huge_file,sparse_super'

dir=${2%/}
[ -n "${dir}" ] && test -d "${dir}" || Fatal "${dir:-(empty)} is not a directory"
case ${fstype:-ext4} in
ext2)
	mkfs.ext2 -m0 "${fsopts}" "${devnode}" >/dev/null \
		|| Fatal "mkfs.ext2 ${devnode} failed"
	tune2fs -c0 -i0 -m0 "${devnode}" >/dev/null
	mount -t ext2 ${opts:+-o "${opts}"} -- "${devnode}" "${dir}" \
		|| Fatal "mount ${devnode} failed";;
ext4)
	fsopts=${fsopts}',extent,^uninit_bg,dir_nlink,extra_isize,^has_journal'
	mkfs.ext4 -m0 "${fsopts}" "${devnode}" >/dev/null \
		|| Fatal "mkfs.ext4 ${devnode} failed"
	tune2fs -c0 -i0 -m0 "${devnode}" >/dev/null
	mount -t ext4 ${opts:+-o "${opts}"} -- "${devnode}" "${dir}" \
		|| Fatal "mount ${devnode} failed";;
*)
	Fatal "unsupported filesystem ${fstype}";;
esac

# Change owner/mode if requested
[ -z "${owgr}" ] || chown -- "${owgr}" "${dir}"
{ -z "${mode}" ] || chmod -- "${mode}" "${dir}"
